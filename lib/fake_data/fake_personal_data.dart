class FakePersonalData {
  // Lista de mas de 100 nombres de hombres en ingles aleatorios
  static List<String> maleName = [
    'James',
    'John',
    'Robert',
    'Michael',
    'William',
    'David',
    'Richard',
    'Charles',
    'Joseph',
    'Thomas',
    'Christopher',
    'Daniel',
    'Paul',
    'Mark',
    'Donald',
    'George',
    'Kenneth',
    'Steven',
    'Edward',
    'Brian',
    'Ronald',
    'Anthony',
    'Kevin',
    'Jason',
    'Matthew',
    'Gary',
    'Timothy',
    'Jose',
    'Larry',
    'Jeffrey',
    'Frank',
    'Scott',
    'Eric',
    'Stephen',
    'Andrew',
    'Raymond',
    'Gregory',
    'Joshua',
    'Jerry',
    'Dennis',
    'Walter',
    'Patrick',
    'Peter',
    'Harold',
    'Douglas',
    'Henry',
    'Carl',
    'Arthur',
    'Ryan',
    'Roger',
    'Joe',
    'Juan',
    'Jack',
    'Albert',
    'Jonathan',
    'Justin',
    'Terry',
    'Gerald',
    'Keith',
    'Samuel',
    'Willie',
    'Ralph',
    'Lawrence',
    'Nicholas',
    'Roy',
    'Benjamin',
    'Bruce',
    'Brandon',
    'Adam',
    'Harry',
    'Fred',
    'Wayne',
    'Billy',
    'Steve',
    'Louis',
    'Jeremy',
    'Aaron',
    'Randy',
    'Howard',
    'Eugene',
    'Carlos',
    'Russell',
    'Bobby',
    'Victor',
    'Martin',
    'Ernest',
    'Phillip',
    'Todd',
    'Jesse',
    'Craig',
    'Alan',
    'Shawn',
    'Clarence',
    'Sean',
    'Philip',
    'Chris',
    'Johnny',
    'Earl',
    'Jimmy',
    'Antonio',
    'Danny',
    'Bryan',
    'Tony',
    'Luis',
    'Mike',
    'Stanley',
    'Leonard',
    'Nathan',
    'Dale',
    'Manuel',
    'Rodney',
    'Curtis',
    'Norman',
    'Allen',
  ];

  // Lista de las de 100 nombres de mujeres en ingles aleatorios
  static List<String> femaleName = [
    'Mary',
    'Patricia',
    'Linda',
    'Barbara',
    'Elizabeth',
    'Jennifer',
    'Maria',
    'Susan',
    'Margaret',
    'Dorothy',
    'Lisa',
    'Nancy',
    'Karen',
    'Betty',
    'Helen',
    'Sandra',
    'Donna',
    'Carol',
    'Ruth',
    'Sharon',
    'Michelle',
    'Laura',
    'Sarah',
    'Kimberly',
    'Deborah',
    'Jessica',
    'Shirley',
    'Cynthia',
    'Angela',
    'Melissa',
    'Brenda',
    'Amy',
    'Anna',
    'Rebecca',
    'Virginia',
    'Kathleen',
    'Pamela',
    'Martha',
    'Debra',
    'Amanda',
    'Stephanie',
    'Carolyn',
    'Christine',
    'Marie',
    'Janet',
    'Catherine',
    'Frances',
    'Ann',
    'Joyce',
    'Diane',
    'Alice',
    'Julie',
    'Heather',
    'Teresa',
    'Doris',
    'Gloria',
    'Evelyn',
    'Jean',
    'Cheryl',
    'Mildred',
    'Katherine',
    'Joan',
    'Ashley',
    'Judith',
    'Rose',
    'Janice',
    'Kelly',
    'Nicole',
    'Judy',
    'Christina',
    'Kathy',
    'Theresa',
    'Beverly',
    'Denise',
    'Tammy',
    'Irene',
    'Jane',
    'Lori',
    'Rachel',
    'Marilyn',
    'Andrea',
    'Kathryn',
    'Louise',
    'Sara',
    'Anne',
    'Jacqueline',
    'Wanda',
    'Bonnie',
    'Julia',
    'Ruby',
    'Lois',
    'Tina',
    'Phyllis',
    'Norma',
    'Paula',
    'Diana',
    'Annie',
    'Lillian',
    'Emily',
    'Robin',
    'Peggy',
    'Crystal',
    'Gladys',
    'Rita',
    'Dawn',
    'Connie',
    'Florence',
    'Tracy',
    'Edna',
    'Tiffany',
    'Carmen',
    'Rosa',
    'Cindy',
    'Grace',
  ];

  // Lista de mas de 100 apellidos en ingles aleatorios
  static List<String> lastName = [
    'Smith',
    'Johnson',
    'Williams',
    'Jones',
    'Brown',
    'Davis',
    'Miller',
    'Wilson',
    'Moore',
    'Taylor',
    'Anderson',
    'Thomas',
    'Jackson',
    'White',
    'Harris',
    'Martin',
    'Thompson',
    'Garcia',
    'Martinez',
    'Robinson',
    'Clark',
    'Rodriguez',
    'Lewis',
    'Lee',
    'Walker',
    'Hall',
    'Allen',
    'Young',
    'Hernandez',
    'King',
    'Wright',
    'Lopez',
    'Hill',
    'Scott',
    'Green',
    'Adams',
    'Baker',
    'Gonzalez',
    'Nelson',
    'Carter',
    'Mitchell',
    'Perez',
    'Roberts',
    'Turner',
    'Phillips',
    'Campbell',
    'Parker',
    'Evans',
    'Edwards',
    'Collins',
    'Stewart',
    'Sanchez',
    'Morris',
    'Rogers',
    'Reed',
    'Cook',
    'Morgan',
    'Bell',
    'Murphy',
    'Bailey',
    'Rivera',
    'Cooper',
    'Richardson',
    'Cox',
    'Howard',
    'Ward',
    'Torres',
    'Peterson',
    'Gray',
    'Ramirez',
    'James',
    'Watson',
    'Brooks',
    'Kelly',
    'Sanders',
    'Price',
    'Bennett',
    'Wood',
    'Barnes',
    'Ross',
    'Henderson',
    'Coleman',
    'Jenkins',
    'Perry',
    'Powell',
    'Long',
    'Patterson',
    'Hughes',
    'Flores',
    'Washington',
    'Butler',
    'Simmons',
    'Foster',
    'Gonzales',
    'Bryant',
    'Alexander',
    'Russell',
    'Griffin',
    'Diaz',
    'Hayes',
    'Myers',
    'Ford',
    'Hamilton',
    'Graham',
    'Sullivan',
    'Wallace',
    'Woods',
    'Cole',
    'West',
    'Jordan',
    'Owens',
    'Reynolds',
    'Fisher',
    'Ellis',
  ];

  // Lista de mas de 100 palabras inventadas
  static List<String> email = [
    'xfranecki@rohan.net',
    'sonya77@aufderhar.com',
    'filomena.prohaska@heaney.com',
    'jabshire@ondricka.info',
    'gjast@yahoo.com',
    'mcglynn.paxton@hotmail.com',
    'yasmine.greenholt@fisher.net',
    'mozelle.harris@rolfson.com',
    'ucormier@brakus.net',
    'kristin.gulgowski@runolfsdottir.org',
    'zspencer@okuneva.com',
    'jerrell.emard@hotmail.com',
    'lesch.iliana@hotmail.com',
    'pgaylord@quitzon.com',
    'erica81@gmail.com',
    'ukreiger@mueller.net',
    'aveum@gmail.com',
    'zjones@yahoo.com',
    'opadberg@kilback.com',
    'ckerluke@gmail.com',
    'blick.jewell@kovacek.com',
    'quincy.zemlak@hotmail.com',
    'pokon@yahoo.com',
    'jailyn52@hotmail.com',
    'lpowlowski@gmail.com',
    'janie35@howe.com',
    'kbotsford@collins.info',
    'econsidine@yahoo.com',
    'laila98@gmail.com',
    'tbechtelar@gmail.com',
    'blanca.dibbert@dickinson.com',
    'mitchell.donald@nicolas.com',
    'feest.shemar@hotmail.com',
    'pbatz@hotmail.com',
    'buckridge.dayana@hotmail.com',
    'bailey.jeff@yahoo.com',
    'madilyn11@wiegand.com',
    'gleichner.christina@kling.com',
    'itorp@kertzmann.com',
    'vhahn@damore.biz',
    'gloria38@gmail.com',
    'holden.lebsack@hotmail.com',
    'schuyler16@simonis.info',
    'mlarson@cummings.com',
    'america45@hotmail.com',
    'ghand@beahan.info',
    'jeff.schultz@welch.com',
    'rmraz@kulas.biz',
    'caitlyn.grant@hotmail.com',
    'mhermann@hotmail.com',
    'dax.mckenzie@wisoky.biz',
    'sbartell@lehner.com',
    'wilburn.cruickshank@hotmail.com',
    'pklein@hotmail.com',
    'napoleon.okeefe@kuhn.net',
    'hcrooks@gaylord.com',
    'uswift@gmail.com',
    'shields.lucinda@johns.com',
    'deja.schulist@yahoo.com',
    'grant.julio@hotmail.com',
    'clement.emard@hotmail.com',
    'therese.barton@hansen.com',
    'vince.williamson@hotmail.com',
    'rylan.towne@hotmail.com',
    'kane.reinger@hansen.info',
    'shane47@anderson.info',
    'pauline44@klocko.com',
    'lfarrell@bogisich.com',
    'brain86@tremblay.com',
    'isabel.boyle@hotmail.com',
    'russ55@hotmail.com',
    'lebsack.craig@price.com',
    'elliott.bednar@hotmail.com',
    'alang@gmail.com',
    'ana12@herman.info',
    'grady.muhammad@murazik.info',
    'ewunsch@mraz.com',
    'pstark@yahoo.com',
    'bschinner@ryan.com',
    'sreinger@yahoo.com',
    'lila.tillman@bergnaum.com',
    'thompson.lesley@nicolas.com',
    'russel.augustus@gmail.com',
    'jmitchell@hotmail.com',
    'snikolaus@wiegand.info',
    'kohler.zack@yahoo.com',
    'nitzsche.modesta@hotmail.com',
    'garfield06@beatty.info',
    'antonio.cassin@gottlieb.com',
    'zfisher@gmail.com',
    'anibal.franecki@blick.info',
    'isabel.brekke@hotmail.com',
    'reynold.frami@gmail.com',
    'barbara52@yahoo.com',
    'kling.audie@hotmail.com',
    'brian77@koelpin.com',
    'maya79@bartoletti.com',
    'alexandra.runolfsson@kassulke.com',
    'wolf.ashley@conroy.net',
    'lew41@hamill.info',
    'polly.crooks@heathcote.com',
    'helmer.dickinson@gmail.com',
    'herman.zakary@yahoo.com',
    'nlemke@hotmail.com',
    'maude.vandervort@hotmail.com',
    'abernathy.jared@rempel.com',
    'grady.myrtis@gmail.com',
    'neoma05@lowe.com',
    'douglas.janis@hotmail.com',
    'koch.tyshawn@hotmail.com',
    'iruecker@kub.com',
    'khauck@mcglynn.biz',
    'norene.grady@kub.com',
    'orpha55@gmail.com',
  ];

  // Lista de mas de 100 numeros de telefono
  static const List<String> phoneNumbers = [
    '(528) 030-9467',
    '(642) 110-0014',
    '(399) 711-4036',
    '(450) 323-1849',
    '(749) 400-1074',
    '(639) 312-3741',
    '(502) 646-6452',
    '(370) 286-6517',
    '(976) 843-6681',
    '(210) 862-1962',
    '(625) 042-2523',
    '(908) 574-5873',
    '(973) 461-1538',
    '(738) 733-9157',
    '(372) 821-1331',
    '(871) 946-6356',
    '(838) 833-6387',
    '(953) 208-8678',
    '(831) 481-6719',
    '(775) 582-6420',
    '(852) 226-7582',
    '(827) 604-1158',
    '(719) 467-2979',
    '(337) 664-1455',
    '(407) 090-2074',
    '(195) 893-9457',
    '(615) 974-7802',
    '(388) 056-3429',
    '(182) 757-8420',
    '(596) 636-8602',
    '(938) 584-9311',
    '(106) 755-3259',
    '(708) 500-1010',
    '(595) 439-3292',
    '(713) 103-4814',
    '(202) 826-2821',
    '(619) 612-3370',
    '(354) 156-0145',
    '(146) 064-0265',
    '(363) 919-8904',
    '(471) 000-7769',
    '(047) 528-8232',
    '(450) 568-8941',
    '(667) 069-5800',
    '(524) 355-5358',
    '(281) 600-6962',
    '(436) 790-3537',
    '(646) 693-2622',
    '(124) 044-0986',
    '(381) 479-2391',
    '(913) 289-8397',
    '(790) 630-5886',
    '(150) 431-4732',
    '(985) 702-1493',
    '(562) 603-6173',
    '(042) 881-1623',
    '(307) 893-7767',
    '(224) 981-2417',
    '(155) 800-2835',
    '(121) 987-0757',
    '(372) 453-5753',
    '(591) 085-2437',
    '(994) 196-5237',
    '(547) 695-6495',
    '(837) 792-1287',
    '(659) 191-1393',
    '(748) 189-6162',
    '(398) 712-8618',
    '(251) 904-0581',
    '(248) 194-7223',
    '(656) 412-2565',
    '(145) 967-6716',
    '(935) 624-6855',
    '(847) 576-2062',
    '(768) 642-2901',
    '(061) 010-9563',
    '(412) 667-3185',
    '(053) 215-1895',
    '(235) 473-8112',
    '(066) 802-7997',
    '(920) 344-8217',
    '(625) 442-7408',
    '(816) 948-0270',
    '(954) 487-2179',
    '(754) 081-4032',
    '(635) 061-1817',
    '(464) 561-5592',
    '(263) 250-8021',
    '(770) 502-9284',
    '(971) 681-7496',
    '(563) 675-6734',
    '(766) 564-0074',
    '(285) 571-7664',
    '(632) 254-0341',
    '(876) 748-0606',
    '(262) 907-3383',
    '(275) 732-2958',
    '(641) 941-3446',
    '(392) 127-6202',
    '(564) 611-0712',
    '(115) 232-1171',
    '(069) 935-8796',
    '(013) 045-3163',
    '(215) 498-0037',
    '(384) 119-7481',
    '(599) 348-8017',
    '(162) 433-4939',
    '(103) 436-5418',
    '(238) 349-3342',
    '(163) 051-1413',
    '(980) 138-4802',
    '(662) 959-9826',
    '(349) 800-4296',
  ];
}
